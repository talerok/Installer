//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Localization {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Localization.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка сборщика.
        /// </summary>
        public static string AssemblerErrorMessageText {
            get {
                return ResourceManager.GetString("AssemblerErrorMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сборка прошла успешно.
        /// </summary>
        public static string AssemblingFinishMessageText {
            get {
                return ResourceManager.GetString("AssemblingFinishMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сборка {0}.
        /// </summary>
        public static string AssemblingMessageText {
            get {
                return ResourceManager.GetString("AssemblingMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Добавить программу в автозапуск.
        /// </summary>
        public static string AutoStartShortCutTextBoxText {
            get {
                return ResourceManager.GetString("AutoStartShortCutTextBoxText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Назад.
        /// </summary>
        public static string BackButtonText {
            get {
                return ResourceManager.GetString("BackButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Отменить.
        /// </summary>
        public static string CancelInstallButtonText {
            get {
                return ResourceManager.GetString("CancelInstallButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Отмена установки.
        /// </summary>
        public static string CancelInstallMessageText {
            get {
                return ResourceManager.GetString("CancelInstallMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Отменить установку?.
        /// </summary>
        public static string CancelInstallQuestion {
            get {
                return ResourceManager.GetString("CancelInstallQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Закрыть.
        /// </summary>
        public static string CloseButtonText {
            get {
                return ResourceManager.GetString("CloseButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка генерации кода.
        /// </summary>
        public static string CodeGenerationErrorMessageText {
            get {
                return ResourceManager.GetString("CodeGenerationErrorMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка компиляции.
        /// </summary>
        public static string CompilationErrorMessageText {
            get {
                return ResourceManager.GetString("CompilationErrorMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Копирование файлов сборки.
        /// </summary>
        public static string CopyBuildFilesMessageText {
            get {
                return ResourceManager.GetString("CopyBuildFilesMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Создать ярлык на рабочем столе.
        /// </summary>
        public static string DesktopShortCutTextBoxText {
            get {
                return ResourceManager.GetString("DesktopShortCutTextBoxText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Версия .Net Framework {0} не найдена на компьютере.
        /// </summary>
        public static string FrameworkNotFoundMessageText {
            get {
                return ResourceManager.GetString("FrameworkNotFoundMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Неизвестная версия .Net Framework.
        /// </summary>
        public static string IncorrectFrameworkVersionMessageText {
            get {
                return ResourceManager.GetString("IncorrectFrameworkVersionMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Установка была отменена.
        /// </summary>
        public static string InstallationCanceled {
            get {
                return ResourceManager.GetString("InstallationCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Установка завершилась с ошибкой.
        /// </summary>
        public static string InstallationError {
            get {
                return ResourceManager.GetString("InstallationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка установки.
        /// </summary>
        public static string InstallationErrorMessageText {
            get {
                return ResourceManager.GetString("InstallationErrorMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Установка.
        /// </summary>
        public static string InstallationMessageTittle {
            get {
                return ResourceManager.GetString("InstallationMessageTittle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Запуск установки.
        /// </summary>
        public static string InstallationStartMessageText {
            get {
                return ResourceManager.GetString("InstallationStartMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Установить.
        /// </summary>
        public static string InstallButtonText {
            get {
                return ResourceManager.GetString("InstallButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не найден каталог установки.
        /// </summary>
        public static string InstallCatalogNotFound {
            get {
                return ResourceManager.GetString("InstallCatalogNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка инициализации установщика.
        /// </summary>
        public static string InstallerInitError {
            get {
                return ResourceManager.GetString("InstallerInitError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Мастер установки {0}.
        /// </summary>
        public static string InstallerName {
            get {
                return ResourceManager.GetString("InstallerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Финализация установки.
        /// </summary>
        public static string InstallFinalizationMessageText {
            get {
                return ResourceManager.GetString("InstallFinalizationMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Папка установки.
        /// </summary>
        public static string InstallFolderText {
            get {
                return ResourceManager.GetString("InstallFolderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Для запуска нужны права администратора.
        /// </summary>
        public static string NeedAdminMessageText {
            get {
                return ResourceManager.GetString("NeedAdminMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Далее.
        /// </summary>
        public static string NextButtonText {
            get {
                return ResourceManager.GetString("NextButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Программа не найдена.
        /// </summary>
        public static string ProgrammNotFound {
            get {
                return ResourceManager.GetString("ProgrammNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Программа востановлена.
        /// </summary>
        public static string RecoveryProgramFinishMessageText {
            get {
                return ResourceManager.GetString("RecoveryProgramFinishMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Востановление программы.
        /// </summary>
        public static string RecoveryProgramMessageText {
            get {
                return ResourceManager.GetString("RecoveryProgramMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Откат изменений.
        /// </summary>
        public static string RevertInstallMessageText {
            get {
                return ResourceManager.GetString("RevertInstallMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Обзор....
        /// </summary>
        public static string SelectFolderButtonText {
            get {
                return ResourceManager.GetString("SelectFolderButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Создать ярлык в меню пуск.
        /// </summary>
        public static string StartMenuShortCutTextBoxText {
            get {
                return ResourceManager.GetString("StartMenuShortCutTextBoxText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Запустить программу по завершению установки.
        /// </summary>
        public static string StartProgramAfterInstallText {
            get {
                return ResourceManager.GetString("StartProgramAfterInstallText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сборка деинсталятора.
        /// </summary>
        public static string UninstallerAssemblingMessageText {
            get {
                return ResourceManager.GetString("UninstallerAssemblingMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Мастер удаления {0}.
        /// </summary>
        public static string UninstallerName {
            get {
                return ResourceManager.GetString("UninstallerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Вы действительно хотите удалить {0}.
        /// </summary>
        public static string UninstallerQuestionMessageText {
            get {
                return ResourceManager.GetString("UninstallerQuestionMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка удаления программы.
        /// </summary>
        public static string UninstallErrorMessageText {
            get {
                return ResourceManager.GetString("UninstallErrorMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Финализация удаление программы.
        /// </summary>
        public static string UninstallFinalization {
            get {
                return ResourceManager.GetString("UninstallFinalization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Программа была успешно удалена.
        /// </summary>
        public static string UninstallFinishMessageText {
            get {
                return ResourceManager.GetString("UninstallFinishMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Удаление программы {0}.
        /// </summary>
        public static string UninstallProgramMessageText {
            get {
                return ResourceManager.GetString("UninstallProgramMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Установлена более поздняя версия программы (текущая версия: {0}, версия установщика: {1}).
        /// </summary>
        public static string VersionErrorMessageText1 {
            get {
                return ResourceManager.GetString("VersionErrorMessageText1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Установлена неподходящая версия программы (текущая версия: {0}, версия установщика: {1}).
        /// </summary>
        public static string VersionErrorMessageText2 {
            get {
                return ResourceManager.GetString("VersionErrorMessageText2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не найдена папка версии {0} ({1}).
        /// </summary>
        public static string VersionFolderNotFound {
            get {
                return ResourceManager.GetString("VersionFolderNotFound", resourceCulture);
            }
        }
    }
}
